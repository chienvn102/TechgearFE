// üè∑Ô∏è PLAYER TYPES - Tu√¢n th·ªß nghi√™m ng·∫∑t MongoDB Schema

export interface Player {
  _id: string;
  player_id: string;
  player_name: string;
  player_img?: string;
  player_content?: string;
  role?: string;
  team_name?: string;
  achievements?: string;
  is_active: boolean;
  created_at: string;
  updated_at: string;
  __v?: number;
  
  // Compatibility fields
  team?: string;
  position?: string; // Keep for backward compatibility
}

export interface CreatePlayerData {
  player_id?: string; // Optional for create, auto-generated by backend
  player_name: string;
  player_img?: string;
  player_content?: string;
  role?: string;
  team_name?: string;
  achievements?: string;
  is_active: boolean;
}

export interface UpdatePlayerData extends Partial<CreatePlayerData> {
  _id?: string; // Optional since ID is passed separately
}

export interface PlayerListResponse {
  players: Player[];
  pagination: {
    page: number;
    limit: number;
    total: number;
    pages: number;
  };
}

export interface PlayerResponse {
  player: Player;
}

export interface PlayerFilters {
  page?: number;
  limit?: number;
  search?: string;
  position?: string;
  team_name?: string;
  is_active?: boolean;
}
